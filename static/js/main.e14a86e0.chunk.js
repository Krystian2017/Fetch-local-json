(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{13:function(e,n,t){},15:function(e,n,t){},17:function(e,n,t){},19:function(e,n,t){"use strict";t.r(n);var o=t(0),a=t.n(o),i=t(2),r=t.n(i),c=(t(13),t(3)),l=t(4),s=t(6),d=t(5),u=t(7),h=(t(15),t(17),function(e){return a.a.createElement("li",null,"Word for English: ",a.a.createElement("strong",null,e.english),". Translation:"," ",a.a.createElement("strong",null,e.polish))}),f=function(e){function n(){var e,t;Object(c.a)(this,n);for(var o=arguments.length,a=new Array(o),i=0;i<o;i++)a[i]=arguments[i];return(t=Object(s.a)(this,(e=Object(d.a)(n)).call.apply(e,[this].concat(a)))).state={words:[],isLoaded:!1},t}return Object(u.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){var e=this;fetch("data/words.json").then(function(e){return e.json()}).then(function(n){e.setState({words:n.words,isLoaded:!0})})}},{key:"render",value:function(){console.log("render");var e=this.state.words.map(function(e){return a.a.createElement(h,{key:e.id,english:e.en,polish:e.pl})});return a.a.createElement("div",{className:"App"},a.a.createElement("div",null,a.a.createElement("h1",{className:"App-header"},"Polish-English dictionary"),a.a.createElement("p",{className:"App-description"},"This application is a Polish-English dictionary - I used create-app and Fetch to load a local file. It is simply app and you can find the code on"," ",a.a.createElement("a",{className:"App-link",href:"https://github.com/Krystian2017/fetch-local-json"},"my GitHub account."))),a.a.createElement("ul",null,this.state.isLoaded?e:"loading data..."))}}]),n}(o.Component),p=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function w(e,n){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var t=e.installing;null!=t&&(t.onstatechange=function(){"installed"===t.state&&(navigator.serviceWorker.controller?(console.log("New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA."),n&&n.onUpdate&&n.onUpdate(e)):(console.log("Content is cached for offline use."),n&&n.onSuccess&&n.onSuccess(e)))})}}).catch(function(e){console.error("Error during service worker registration:",e)})}r.a.render(a.a.createElement(f,null),document.getElementById("root")),function(e){if("serviceWorker"in navigator){if(new URL("/Fetch-local-json",window.location.href).origin!==window.location.origin)return;window.addEventListener("load",function(){var n="".concat("/Fetch-local-json","/service-worker.js");p?(function(e,n){fetch(e).then(function(t){var o=t.headers.get("content-type");404===t.status||null!=o&&-1===o.indexOf("javascript")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):w(e,n)}).catch(function(){console.log("No internet connection found. App is running in offline mode.")})}(n,e),navigator.serviceWorker.ready.then(function(){console.log("This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA")})):w(n,e)})}}()},8:function(e,n,t){e.exports=t(19)}},[[8,2,1]]]);
//# sourceMappingURL=main.e14a86e0.chunk.js.map